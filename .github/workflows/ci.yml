name: Node.js API Tests

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: root
          POSTGRES_DB: CarDealership_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install dependencies
        run: |
          cd backend_bd
          npm install

      - name: Install sequelize-cli globally
        run: |
          npm install -g sequelize-cli

      - name: Wait for PostgreSQL to be ready
        run: |
          for i in {1..10}; do
            nc -z localhost 5432 && echo "PostgreSQL is ready" && exit 0
            echo "Waiting for PostgreSQL..."
            sleep 3
          done
          echo "PostgreSQL failed to start" && exit 1

      - name: Check if the 'CarDealership_test' database exists
        run: |
          PGPASSWORD=$DB_PASSWORD psql -h localhost -U $DB_USER -d postgres -c "SELECT 1 FROM pg_database WHERE datname='CarDealership_test';"
        continue-on-error: true

      - name: Create 'CarDealership_test' database if not exists
        run: |
          PGPASSWORD=$DB_PASSWORD psql -h localhost -U $DB_USER -d postgres -c "CREATE DATABASE CarDealership_test;"
        continue-on-error: true

      - name: Check if the 'cars' table exists
        run: |
          PGPASSWORD=$DB_PASSWORD psql -h localhost -U $DB_USER -d CarDealership_test -c "SELECT to_regclass('public.cars');"
        continue-on-error: true

      - name: Create 'cars' table if not exists
        run: |
          PGPASSWORD=$DB_PASSWORD psql -h localhost -U $DB_USER -d CarDealership_test -c "
          CREATE TABLE IF NOT EXISTS public.cars (
            car_id SERIAL PRIMARY KEY,
            brand VARCHAR(50) NOT NULL,
            model VARCHAR(50) NOT NULL,
            year INTEGER,
            price DECIMAL(12, 2) NOT NULL,
            mileage INTEGER,
            fueltype VARCHAR(20),
            transmission VARCHAR(20),
            description TEXT,
            sold_by_employee_id INTEGER
          );"
        continue-on-error: true

      - name: Setup test database (if migrations exist)
        run: |
          cd backend_bd
          npx sequelize-cli db:migrate --env test
        env:
          NODE_ENV: test
          DB_USER: postgres
          DB_PASSWORD: root
          DB_NAME: CarDealership_test
          DB_HOST: localhost
          DB_PORT: 5432

      - name: Run API tests
        run: |
          cd backend_bd
          npm test
        env:
          NODE_ENV: test
          DB_USER: postgres
          DB_PASSWORD: root
          DB_NAME: CarDealership_test
          DB_HOST: localhost
          DB_PORT: 5432
